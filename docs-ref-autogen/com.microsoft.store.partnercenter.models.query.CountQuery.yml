### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery"
  id: "CountQuery"
  parent: "com.microsoft.store.partnercenter.models.query"
  children:
  - "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery()"
  - "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery(java.lang.Object)"
  - "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter()"
  - "com.microsoft.store.partnercenter.models.query.CountQuery.getType()"
  - "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  - "com.microsoft.store.partnercenter.models.query.CountQuery.toString()"
  langs:
  - "java"
  name: "CountQuery"
  nameWithType: "CountQuery"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery"
  type: "Class"
  package: "com.microsoft.store.partnercenter.models.query"
  summary: "A query that returns the number of entities that may optionally fit a filter."
  syntax:
    content: "public class CountQuery extends BaseQuery"
  inheritance:
  - "com.microsoft.store.partnercenter.models.query.BaseQuery"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery()"
  id: "CountQuery()"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "CountQuery()"
  nameWithType: "CountQuery.CountQuery()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery()"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter.models.query"
  syntax:
    content: "protected CountQuery()"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery(java.lang.Object)"
  id: "CountQuery(java.lang.Object)"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "CountQuery(Object token)"
  nameWithType: "CountQuery.CountQuery(Object token)"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery(Object token)"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter.models.query"
  syntax:
    content: "protected CountQuery(Object token)"
    parameters:
    - id: "token"
      type: "java.lang.Object"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter()"
  id: "getFilter()"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "getFilter()"
  nameWithType: "CountQuery.getFilter()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter()"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query"
  syntax:
    content: "public FieldFilter getFilter()"
    return:
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getType()"
  id: "getType()"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "CountQuery.getType()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getType()"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.getType*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query"
  summary: "Gets the query type."
  syntax:
    content: "public QueryType getType()"
    return:
      type: "com.microsoft.store.partnercenter.models.query.QueryType"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  id: "setFilter(com.microsoft.store.partnercenter.models.query.filters.FieldFilter)"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "setFilter(FieldFilter value)"
  nameWithType: "CountQuery.setFilter(FieldFilter value)"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter(FieldFilter value)"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query"
  syntax:
    content: "public void setFilter(FieldFilter value)"
    parameters:
    - id: "value"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.toString()"
  id: "toString()"
  parent: "com.microsoft.store.partnercenter.models.query.CountQuery"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "CountQuery.toString()"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.toString()"
  overload: "com.microsoft.store.partnercenter.models.query.CountQuery.toString*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query"
  summary: "Returns a string representation of the query."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A string representation of the query."
references:
- uid: "java.lang.Object"
  name: "Object"
  nameWithType: "Object"
  fullName: "java.lang.Object"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery*"
  name: "CountQuery"
  nameWithType: "CountQuery.CountQuery"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.CountQuery"
  package: "com.microsoft.store.partnercenter.models.query"
- uid: "com.microsoft.store.partnercenter.models.query.QueryType"
  name: "QueryType"
  nameWithType: "QueryType"
  fullName: "com.microsoft.store.partnercenter.models.query.QueryType"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getType*"
  name: "getType"
  nameWithType: "CountQuery.getType"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getType"
  package: "com.microsoft.store.partnercenter.models.query"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  name: "FieldFilter"
  nameWithType: "FieldFilter"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter*"
  name: "getFilter"
  nameWithType: "CountQuery.getFilter"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.getFilter"
  package: "com.microsoft.store.partnercenter.models.query"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter*"
  name: "setFilter"
  nameWithType: "CountQuery.setFilter"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.setFilter"
  package: "com.microsoft.store.partnercenter.models.query"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.models.query.CountQuery.toString*"
  name: "toString"
  nameWithType: "CountQuery.toString"
  fullName: "com.microsoft.store.partnercenter.models.query.CountQuery.toString"
  package: "com.microsoft.store.partnercenter.models.query"
- uid: "com.microsoft.store.partnercenter.models.query.BaseQuery"
  name: "BaseQuery"
  nameWithType: "BaseQuery"
  fullName: "com.microsoft.store.partnercenter.models.query.BaseQuery"
